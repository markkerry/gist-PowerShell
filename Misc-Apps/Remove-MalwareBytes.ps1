<#
.Synopsis
   Remove MalwareBytes application
.DESCRIPTION
   This scripts removes MwalwareBytes it using unins000.exe or unins001.exe
   Script log located in C:\Windows\Logs
.EXAMPLE
   .\Remove-MalwareBytes.ps1
.NOTES
   Written by: Mark Kerry
   Date: 14/02/2019
   Version: 1.0
#>

# Functions
function Write-LogEntry {
    param(
        [parameter(Mandatory=$true, HelpMessage="Value added to the RemoveFirefox.log file.")]
        [ValidateNotNullOrEmpty()]
        [string]$Value,

        [parameter(Mandatory=$false, HelpMessage="Name of the log file that the entry will written to.")]
        [ValidateNotNullOrEmpty()]
        [string]$FileName = "RemoveMalwareBytes.log"
    )
    # Determine log file location
    $LogFilePath = Join-Path -Path $env:windir -ChildPath "Logs\$($FileName)"

    # Add value to log file
    try {
        Out-File -InputObject $Value -Append -NoClobber -Encoding Default -FilePath $LogFilePath -ErrorAction Stop
    }
    catch [System.Exception] {
        Write-Warning -Message "Unable to append log entry to RemoveMalwareBytes.log file"
        exit 1
    }
}

function Remove-MalwareBytes {
    try { 
        $exitCode = (Start-Process -FilePath "C:\Program Files\Malwarebytes\Anti-Malware\$uninst"  -ArgumentList  "/SILENT /NORESTART" -NoNewWindow -Wait -PassThru).ExitCode
        Start-Sleep 5
        if (($exitCode -eq 0) -or ($exitCode -eq 3010)) {
            Write-LogEntry -Value "$(Get-Date -format g): Successfully uninstalled MalwareBytes 64-bit"
        }
        else {
            Write-LogEntry -Value "$(Get-Date -format g): Failed with exit code $exitCode"
        }
    }
    catch [System.Exception] {
        Write-LogEntry -Value "$(Get-Date -format g): Unable to remove MalwareBytes 64-bit - Exit code $exitCode"
        Write-LogEntry -Value "$(Get-Date -format g): Exit Remove-MalwareBytes.ps1 on $env:COMPUTERNAME"
        exit 1
    }
}

Write-LogEntry -Value "$(Get-Date -format g): Starting Remove-MalwareBytes.ps1 on $env:COMPUTERNAME"
Write-LogEntry -Value "$(Get-Date -format g): Checking if MalwareBytes is installed"

if (Test-Path "C:\Program Files\Malwarebytes\Anti-Malware\unins000.exe") {
    $uninst = "unins000.exe"
    Write-LogEntry -Value "$(Get-Date -format g): MalwareBytes 64-bit is installed on $env:COMPUTERNAME. $uninst"
    Remove-MalwareBytes
}
elseif (Test-Path "C:\Program Files\Malwarebytes\Anti-Malware\unins001.exe") {
    $uninst = "unins001.exe"
    Write-LogEntry -Value "$(Get-Date -format g): MalwareBytes 64-bit is installed on $env:COMPUTERNAME. $uninst"
    Remove-MalwareBytes
}
else {
    Write-LogEntry -Value "$(Get-Date -format g): MalwareBytes is not installed on $env:COMPUTERNAME"
}
Write-LogEntry -Value "$(Get-Date -format g): Finished Remove-MalwareBytes.ps1 on $env:COMPUTERNAME"
